export let source = tg.function(() =>
	tg.directory({
		["Cargo.toml"]: tg.include("Cargo.toml"),
		["Cargo.lock"]: tg.include("Cargo.lock"),
		["src"]: tg.include("./src"),
		["packages"]: tg.include("./packages"),
		["assets"]: tg.include("./assets"),
	}),
);

export let test = tg.function(async () => {
	await symlinkToFile();
	await symlinkInDirectory();
	await symlinkIntoDirectory();
	await symlinkThroughSymlink();
	await relativePathSymlink();
	await multipleLevelsOfIndirection();
});

let symlinkToFile = async () => {
	console.log("Checking that we can resolve a symlink to a file.");
	/*
		foo: "hello"
		bar -> foo
	*/
	let foo = await tg.file("hello");
	let bar = await tg.symlink(foo);
	let resolved = await bar.resolve();

	tg.File.assert(resolved);
	let text = await resolved.text();
	if (text !== "hello") {
		throw new Error("Failed to resolve simple case.");
	}
	console.log("Success.");
};

let symlinkInDirectory = async () => {
	console.log("Checking that we can resolve a symlink inside a directory.");
	/*
		foo: "hello"
		bar
		|_ link -> foo
	*/
	let foo = await tg.file("hello");
	let bar = await tg.directory({
		["link"]: tg.symlink(foo),
	});

	let resolved = await bar.get("link");
	tg.File.assert(resolved);
	let text = await resolved.text();
	if (text !== "hello") {
		throw new Error("Failed to resolve simple case.");
	}
	console.log("Success.");
};

let symlinkIntoDirectory = async () => {
	console.log("Checking if we can resolve a symlink into a directory.");
	/*
		foo
		|_ file.txt: "hello"

		bar -> foo/file.txt
	*/
	let foo = await tg.directory({
		"file.txt": "hello"
	});
	let bar = await tg.symlink(t`${foo}/file.txt`);
	let resolved = await bar.resolve();
	tg.File.assert(resolved);
	let text = await resolved.text();
	if (text !== "hello") {
		throw new Error("Failed to resolve simple case.");
	}
	console.log("Success.");
};

let symlinkThroughSymlink = async () => {
	console.log("Checking if we can resolve a symlink through another symlink.");
	/*
	foo
	|_ subdirectory
	   |_ file.txt: "hello"

	bar
	|_ subdirectory
	   |_ foo -> foo
	*/
	let foo = await tg.directory({
		"subdirectory/file.txt": "hello",
	});

	let bar = await tg.directory({
		"subdirectory/foo": tg.symlink(t`${foo}`),
	});

	let baz = await tg.symlink(t`${bar}/subdirectory/foo/subdirectory/file.txt`);

	let resolved = await baz.resolve();
	tg.File.assert(resolved);
	let text = await resolved.text();
	if (text !== "hello") {
		throw new Error("Failed to resolve simple case.");
	}
	console.log("Success.");
};

let relativePathSymlink = async () => {
	console.log("Checking if we can get a file pointed to by relativePathSymlink.") ;
	/*
		foo
		|_ file.txt
		|_ link -> ./file.txt
	*/
	let foo = await tg.directory({
		"file.txt": "hello",
		"link": tg.symlink("file.txt"),
	});

	let resolved = await foo.get("link");
	tg.File.assert(resolved);
	let text = await resolved.text();
	if (text !== "hello") {
		throw new Error("Failed to resolve simple case.");
	}
	console.log("Success.");
};

let multipleLevelsOfIndirection = async () => {
	console.log("Checking if we can resolve symlinks through multiple levels of indirection.");
	/*
		foo
		|_ subdirectory
		   |_ file.txt: "hello"

		bar
		|_ subdirectory/file.txt: "hello"
		|__link -> ./subdirectory

		baz
		|_ bar -> bar

	*/
	let bar = await tg.directory({
		"link": tg.symlink("subdirectory"),
		"subdirectory/file.txt": "hello",
	});
	let baz = await tg.directory({
		"bar": tg.symlink(bar)
	});

	let resolved = await baz.get("bar/link/file.txt");
	tg.File.assert(resolved);
	let text = await resolved.text();
	if (text !== "hello") {
		throw new Error("Failed to resolve simple case.");
	}
	console.log("Success.");
};
